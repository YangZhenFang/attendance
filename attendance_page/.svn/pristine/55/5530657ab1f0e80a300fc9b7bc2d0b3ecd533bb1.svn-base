<template>
  <div>

    <el-form v-model="formInline" class="demo-form-inline" ref="formInline" label-position="right" label-width="100px"
             @keyup.enter.native="onSearch('formInline')">
      <el-form-item label="考勤组名称:" prop="org_name">
        <el-input v-model="formInline.atd_name" placeholder="请输入考勤组名称" style="width: 200px"></el-input>
      </el-form-item>
      <el-form-item label="参与考勤人员:">
        <div class="tagclass" @click="chooseDepartOrPlice">
          <el-tag style="margin: 0 3px" :type="item.type" v-for="(item,index) in attendanceClerk" :key="item.id">
            {{item.name}}
          </el-tag>
        </div>
      </el-form-item>
      <el-form-item label="无需考勤人员:" v-show="unshow">
        <div class="tagclass" @click="unDepartOrPlice">
          <el-tag style="margin: 0 3px" :type="item.type" v-for="(item,index) in unAttendanceClerk" :key="item.id">
            {{item.name}}
          </el-tag>
        </div>
      </el-form-item>
      <el-form-item label="考勤组负责人:">
        <div class="tagclass" @click="adDepartOrPlice">
          <el-tag style="margin: 0 3px" :type="item.type" v-for="(item,index) in adAttendanceClerk" :key="item.id">
            {{item.name}}





          </el-tag>
        </div>
        <p class="infoColor">协助管理员分管本考勤组的排班及统计</p>
      </el-form-item>
      <el-form-item label="考勤类型:">
        <el-radio-group v-model="formInline.atdTypeRadio">
          <el-radio class="radio" :label="0">固定班制 (每天考勤时间一样)</el-radio>
          <el-radio class="radio" :label="1">排班制 (自定义设置考勤时间)</el-radio>
          <el-radio class="radio" :label="2">自由工时（不设置班次，随时打卡）</el-radio>
        </el-radio-group>
      </el-form-item>
      <el-form-item label="工作日设置:" v-show="formInline.atdTypeRadio==0">
        <span>快捷设置班次</span>
        <el-tag type="success">{{shiftsData.name ? shiftsData.name : '休息'}}</el-tag>
        <span>(选择某一班次)</span>
        <el-button type="text" @click="shiftsChoose">更改班次</el-button>
        <el-table
          :data="tableData"
          style="width: 40%">
          <el-table-column
            prop="date"
            label="工作日"
            width="100">
          </el-table-column>
          <el-table-column
            prop="time"
            label="班次时间段"
          >
          </el-table-column>
        </el-table>
      </el-form-item>
      <!--暂时隐藏-->
      <el-form-item label="特殊日期(固定排班):" v-show="formInline.atdTypeRadio==011">
        <div>
          <el-button> 添加</el-button>
          <span class="infoColor">必须打卡的日期</span>
          <el-table
            :data="needTableData"
            style="width: 60%">
            <el-table-column
              prop="date"
              label="日期"
              width="120">
            </el-table-column>
            <el-table-column
              prop="time"
              label="考勤时间"
              width="300">
            </el-table-column>
            <el-table-column
              prop="address"
              label="操作">
              <template scope="scope">
                <el-button
                  size="small"
                  type="text"
                  @click="handleEdit(scope.$index, scope.row)">编辑







































                </el-button>
                <el-button
                  size="small"
                  type="text"
                  @click="handleEdit(scope.$index, scope.row)">删除







































                </el-button>
              </template>
            </el-table-column>
          </el-table>
        </div>
        <div>
          <el-button> 添加</el-button>
          <span class="infoColor">不用打卡的日期</span>
          <el-table
            :data="noTableData"
            style="width: 60%">
            <el-table-column
              prop="date"
              label="日期"
              width="120">
            </el-table-column>
            <el-table-column
              prop="time"
              label="考勤时间"
              width="300">
            </el-table-column>
            <el-table-column
              prop="address"
              label="操作">
              <template scope="scope">
                <el-button
                  size="small"
                  type="text"
                  @click="handleEdit(scope.$index, scope.row)">编辑







































                </el-button>
                <el-button
                  size="small"
                  type="text"
                  @click="handleEdit(scope.$index, scope.row)">删除







































                </el-button>
              </template>
            </el-table-column>
          </el-table>
        </div>

      </el-form-item>
      <el-form-item label="考勤班次(排班制):" v-show="formInline.atdTypeRadio==1">
        <div class="tagclass" @click="atdShiftClick">
          <el-tag type="primary" v-for="(item,index) in atdShiftsRef" :key="item.id">{{item.name}}</el-tag>
        </div>
      </el-form-item>
      <el-form-item label="考勤方式:">
        <span>根据办公地点考勤（可添加多个考勤地点）</span> <span>有效范围</span>
        <el-select v-model="formInline.range" placeholder="请选择" size="small" style="width: 100px;">
          <el-option
            v-for="item in options"
            :key="item.value"
            :label="item.label"
            :value="item.value">
          </el-option>
        </el-select>
        <el-table
          :data="atdWayTableData"
          style="width: 60%">
          <el-table-column
            label="考勤地址"
          >
            <template scope="scope">
              <p style="font-weight: 600">{{scope.row.location}}</p>
              <p>{{scope.row.address}}</p>
            </template>
          </el-table-column>
          <el-table-column
            width="100"
            label="操作">
            <template scope="scope">
              <el-button
                size="small"
                type="text"
                @click="handleEdit(scope.$index, scope.row)">删除
              </el-button>
            </template>
          </el-table-column>
        </el-table>

        <div>
          <el-button type="text">添加考勤地点</el-button>
          （查询地点的经纬度请使用高德地图查看）
        </div>

      </el-form-item>
      <el-form-item label="是否允许外勤">
        <el-switch
          v-model="formInline.is_field"
          on-color="#13ce66"
          off-color="#ff4949"
          on-value="1"
          off-value="0">
        </el-switch>
      </el-form-item>
      <div style="width:60%;text-align: center  ">
        <el-button type="info" @click="saveAttendInfo">保存设置</el-button>
      </div>
    </el-form>
    <!--参与考勤人员-->
    <Police :dialog-visible="dialogVisible" type="attendanceClerk" :data="propData" ref="attendanceClerk"
            title="参与考勤人员选择" @close="dialogClose"></Police>
    <!--不参与考勤人员-->
    <Police :dialog-visible="unDialogVisible" type="unAttendanceClerk" :data="unPropData" ref="unAttendanceClerk"
            title="不参与考勤人员选择" @close="dialogClose"></Police>
    <!--管理考勤负责人-->
    <Police :dialog-visible="adDialogVisible" type="adAttendanceClerk" :data="adPropData" ref="adAttendanceClerk"
            title="考勤组负责人选择" @close="dialogClose"></Police>

    <!--考勤班次单选-->
    <el-dialog title="班次选择" :visible.sync="shiftsDialogVisible" class="shiftsTable" size="tiny">
      <el-table

        v-loading="shiftsLoading"
        :data="shiftsTableData"
        ref="shiftsTableData"
        highlight-current-row
        @current-change="CurrentChange"
        :height="300"
        style="width: 100%;">
        <el-table-column
          width="55"
        >
          <template scope="scope">
            <el-radio v-model="radio" :label="scope.row.id"><span></span></el-radio>
          </template>
        </el-table-column>
        <el-table-column
          label="考勤地址"
          prop="name"
        >

        </el-table-column>
        <el-table-column
          :formatter="dateFormatter"
          label="考勤时间">

        </el-table-column>
      </el-table>
      <span>当前选中班组：</span><strong v-show="shiftsDialogData.name"
                                  style="color: #1d90e6">{{shiftsDialogData.name}}—{{dateFormatter(shiftsDialogData)}}</strong>
      <paging @emitsizechange="handleSizeChange"
              @emitcurrentchange="handleCurrentChange"
              :currentPage="tabPage.currentPage"
              :pageSizes="tabPage.pageSizes"
              :pageSize="tabPage.pageSize"
              :total="tabPage.totalNum">
      </paging>
      <span slot="footer" class="dialog-footer">
    <el-button @click="shiftsDialogVisible = false">取 消</el-button>
    <el-button type="primary" @click="shiftsDialogClose">确 定</el-button>
  </span>
    </el-dialog>
    <!--排班制考勤班次多选-->
    <el-dialog title="班次选择" :visible.sync="atdShiftDialogVisible" size="tiny">
      <el-table

        v-loading="atdShiftsLoading"
        :data="atdShiftDialogTable"
        ref="atdShiftDialogTable"
        highlight-current-row
        @selection-change="atdHandleSelectionChange"
        :height="300"
        style="width: 100%;">
        <el-table-column
          type="selection"
          width="55"
        >
        </el-table-column>
        <el-table-column
          label="考勤地址"
          prop="name"
        >
        </el-table-column>
        <el-table-column
          :formatter="dateFormatter"
          label="考勤时间">
        </el-table-column>
      </el-table>
      <el-button @click="test">123</el-button>
      <paging @emitsizechange="atdHandleSizeChange"
              @emitcurrentchange="atdHandleCurrentChange"
              :currentPage="atdTabPage.currentPage"
              :pageSizes="atdTabPage.pageSizes"
              :pageSize="atdTabPage.pageSize"
              :total="atdTabPage.totalNum">
      </paging>
      <span slot="footer" class="dialog-footer">
    <el-button @click="atdShiftDialogVisible = false">取 消</el-button>
    <el-button type="primary" @click="atdShiftsDialogClose">确 定</el-button>
  </span>
    </el-dialog>

  </div>
</template>

<script>
  import Police from 'common/selectDepart.vue'
  import paging from '../../common/Paging.vue'
  import moment from 'moment'
  import ElButton from "../../../../node_modules/element-ui/packages/button/src/button";
  import Icon from "../../../../node_modules/vue-awesome/components/Icon";
  import ElFormItem from "../../../../node_modules/element-ui/packages/form/src/form-item";
  export default {
    data() {
      return {
        unshow: false,
        atdShiftsRef: [],        //排班制固定时间
        atdShiftsDialogRef: [],
        atdShiftsLoading: false,       //固定班制加载
        atdShiftDialogTable: [],
        atdShiftDialogVisible: false,    //固定班制dialog
        radio: '',             //班组单选按钮(显示效果，无实际交互)
        shiftsData: {},             //固定班制班次选择
        shiftsDialogData: {},    //班组Dialog选择后数据
        atdTabPage: {
          currentPage: 1,
          pageSize: 10,
          pageSizes: [10, 20, 30, 50]
        },//分页信息
        tabPage: {
          currentPage: 1,
          pageSize: 10,
          pageSizes: [10, 20, 30, 50]
        },//分页信息
        shiftsLoading: false,      //考勤班次表格加载
        shiftsTableData: [],
        shiftsDialogVisible: false,    //考勤班次单选

        adDialogVisible: false,
        adAttendanceClerk: [],   //管理考勤负责人
        unDialogVisible: false,
        unAttendanceClerk: [],   //不参与考勤人员数据
        type: '',         //dialog类型
        propData: [],   //父组件传递子组件中间数据
        unPropData: [],
        adPropData: [],
        attendanceClerk: [],      //参与考勤人员数据
        title: '',       //dialog标题
        dialogVisible: false,        //dialo是否显示
        tableData: [{
          date: '周一',
          time: '休息',
        },
          {
            date: '周二',
            time: '休息',

          },
          {
            date: '周三',
            time: '休息',

          },
          {
            date: '周四',
            time: '休息',

          },
          {
            date: '周五',
            time: '休息',

          },
          {
            date: '周六',
            time: '休息',

          },
          {
            date: '周日',
            time: '休息',
          }],
        needTableData: [{
          date: '2016-12-23',
          time: '班次白班A：07:40-17:00'
        }, {
          date: '2016-12-22',
          time: '班次白班A：07:40-17:00'
        }],
        noTableData: [
          {
            date: '2016-12-23',
            time: '休息'
          }, {
            date: '2016-12-22',
            time: '休息'
          }
        ],
        options: [{
          value: '1',
          label: '100米'
        }, {
          value: '2',
          label: '200米'
        }, {
          value: '3',
          label: '300米'
        }, {
          value: '4',
          label: '400米'
        }, {
          value: '5',
          label: '500米'
        }],
        atdWayTableData: [{
          location: '霖岚国际广场',
          address: '云南省昆明市盘龙区东华街道霖岚国际广场',
          x_point:101,
          y_point:102
        }, {
          location: '郑州国贸360广场',
          address: '河南省郑州市金水区文化路街道郑州国贸中心A座郑州国贸360广场',
          x_point:101,
          y_point:102
        }],
        value: '',
        formInline: {
          atd_name: '',
          atdTypeRadio: 1,      //考勤类型
          range: '',
          is_field:0
        }
      }
    },
    methods: {

      /**
       *保存考勤组信息
       */
      saveAttendInfo(){
        console.log(this.formInline)
        var _self = this;
        var parms = this.formInline;
        parms.type = parms.atdTypeRadio;
        switch (parms.type) {
          case 0:
            parms.shiftsData = this.shiftsData;
            break;
          case 1:
            parms.atdShiftsRef = this.atdShiftsRef;
            break;
        }
        parms.atdWayTableData=this.atdWayTableData;
        parms.attendanceClerk=this.attendanceClerk; //参与考勤人员
        parms.adAttendanceClerk = this.adAttendanceClerk;
        console.log(parms)
        _self.$http.post('/business/attendanceGroup/savegroupinfo', parms)
          .then(function (res) {
            console.log(res)
            if (res.data && res.data.flag) {
              _self.$message({
                message: '提交成功',
                type: 'success'
              });
//              _self.getScheduleList();
            } else {
              _self.$message({
                message: res.data.msg,
                type: 'warning'
              });
            }
          })
          .catch(function (error) {
            console.log(error);
          });
      },
      test(){
        var _self = this;
        console.table(_self.atdShiftDialogTable)
        console.table(_self.atdShiftsRef)
        _self.$refs.atdShiftDialogTable.toggleRowSelection(_self.atdShiftsDialogRef[1])

//          _self.atdShiftsRef.forEach(row => {
//            _self.$refs.atdShiftDialogTable.toggleRowSelection(_self.atdShiftsRef[1])
//          });
      },


      /**
       * 排班制多选
       */
      atdHandleSelectionChange(val){
        this.atdShiftsDialogRef = val;
      },
      /**
       * 获取班组list
       */
      getAtdScheduleList(){
        var _self = this;
        _self.shiftsLoading = true;
        var data = {
          page: this.atdTabPage.currentPage,
          pageSize: this.atdTabPage.pageSize,
        };

        this.$http.get('/business/atdSchedule/getschedulelist', {params: data})
          .then(function (res) {
            if (res.data && res.data.flag) {
              var d = res.data.data;
              _self.atdShiftDialogTable = d.rows;
              _self.atdTabPage.totalNum = d.count;
              _self.atdShiftsLoading = false;

            } else {
              _self.$message({
                message: res.data.data,
                type: 'warning'
              });
            }
          }).catch(function (error) {
          _self.atdShiftsLoading = false;
          console.log(error)
        });
      },
      /**
       * 排班制考勤班次Dialog关闭事件
       */
      atdShiftsDialogClose(){
        this.atdShiftDialogVisible = false;
        this.atdShiftsRef = Object.assign([], this.atdShiftsDialogRef);
      },
      /**
       * 排班制考勤班次点击选择事件
       */
      atdShiftClick(){
        this.atdShiftDialogVisible = true;
        this.getAtdScheduleList();


      },

      /**
       * 固定排班弹窗关闭时间
       */
      shiftsDialogClose(){
        this.shiftsDialogVisible = false;
        this.shiftsData = Object.assign({}, this.shiftsDialogData);
        console.log('data', this.shiftsData)
        console.log('22', this.tableData)
        for (var i = 0; i < this.tableData.length - 2; i++)
          this.tableData[i].time = this.dateFormatter(this.shiftsData)
      },
      /**
       *班组单选事件
       */
      CurrentChange(currentRow, oldCurrentRow, index){
        if (currentRow) {     //处理弹窗下次加载后会直执行currentchange方法， currentrow为underfide
          this.radio = currentRow.id
          this.shiftsDialogData = currentRow
        }

//        console.log(this.shiftsDialogData)

      },
      /**
       * 切换每页条数
       * @params {Number} val 每页条数
       */
      handleSizeChange(val) {
        this.tabPage.pageSize = val;
        this.getScheduleList();
      },
      /**
       * 切换页码
       * @params {Number} val 页码
       */
      handleCurrentChange(val) {
        this.tabPage.currentPage = val;
        this.getScheduleList();
      },

      /**
       * 排班切换每页条数
       * @params {Number} val 每页条数
       */
      atdHandleSizeChange(val) {
        this.atdTabPage.pageSize = val;
        this.getAtdScheduleList();
      },
      /**
       * 排班切换页码
       * @params {Number} val 页码
       */
      atdHandleCurrentChange(val) {
        this.atdTabPage.currentPage = val;
        this.getAtdScheduleList();
      },

      /**
       * 格式化时间
       * @row [Object] 但前行数据
       * @column [Object] 当前列
       */
      dateFormatter(row, column){
        return moment(row.work_date).format('HH:mm') + '-' + moment(row.off_date).format('HH:mm');
      },
      /**
       *获取班次信息
       *
       */
      getScheduleList(){
        var _self = this;
        _self.shiftsLoading = true;
        var data = {
          page: this.tabPage.currentPage,
          pageSize: this.tabPage.pageSize,
        };

        this.$http.get('/business/atdSchedule/getschedulelist', {params: data})
          .then(function (res) {
            if (res.data && res.data.flag) {
              var d = res.data.data;
              _self.shiftsTableData = d.rows;
              _self.tabPage.totalNum = d.count;
              _self.shiftsLoading = false;
            } else {
              _self.$message({
                message: res.data.data,
                type: 'warning'
              });
            }
          }).catch(function (error) {
          _self.shiftsLoading = false;
          console.log(error)
        });
      },

      /**
       * 选择班次（单选）
       */
      shiftsChoose(){
        this.shiftsDialogVisible = true;
        this.getScheduleList();
      },
      /**
       *管理考勤负责人选择
       */
      adDepartOrPlice(){
        this.adDialogVisible = true;
        this.adPropData = this.adAttendanceClerk;
      },

      /**
       *不参与考勤人员选择
       */
      unDepartOrPlice(){
        this.unDialogVisible = true;
        this.unPropData = this.unAttendanceClerk;
      },
      /**
       * 组织及人员选择dialog关闭
       * @msg [Object] 子组件传递数据
       */
      dialogClose(msg){
        console.log('msg', msg)
        switch (msg.type) {
          case 'attendanceClerk':     //参与考勤人员
            this.dialogVisible = msg.dialogVisible;
            this.attendanceClerk = msg.CheckedLists;
            break;
          case 'unAttendanceClerk':     //不参与考勤人员
            this.unDialogVisible = msg.dialogVisible;
            this.unAttendanceClerk = msg.CheckedLists;
            break;
          case 'adAttendanceClerk':   //考勤组负责人
            this.adDialogVisible = msg.dialogVisible;
            this.adAttendanceClerk = msg.CheckedLists;
            break;
        }

      },

      /**
       * 参与考勤人员选择
       */
      chooseDepartOrPlice(){
        this.dialogVisible = true;
        this.propData = this.attendanceClerk;
        console.log(this.propData)
      }
    },
    components: {ElFormItem, Icon, ElButton, Police, paging},
    created() {
      console.log('created')
    },
    mounted() {
      console.log('mounted')
    },
    updated() {
    },
  }
</script>

<!-- 添加 "scoped " css作用域只作用于本文件，不作用全局-->
<style scoped>
  .el-tag--depart {
    background-color: #20a0ff;
    border-color: rgba(18, 206, 102, .2);
    color: #fbfdff;
  }

  .el-tag--police {
    background-color: rgba(18, 206, 102, .1);
    border-color: rgba(18, 206, 102, .2);
    color: #20a0ff;
  }

  .tagclass {
    min-height: 36px;
    border-radius: 4px;
    border: 1px solid #bfcbd9;
    padding: 0 5px;
    width: 50%;
    max-height: 100px;
    overflow: auto;
  }

  .radio {
    display: block;
    margin-left: 0px;
    padding: 10px;
  }

  .infoColor {
    color: rgba(73, 88, 107, 0.65)
  }

  /*.shiftsTable .el-table__body tr.current-row > td {*/
  /*background: rgba(80, 191, 255, 0.66)*/
  /*}*/
</style>
