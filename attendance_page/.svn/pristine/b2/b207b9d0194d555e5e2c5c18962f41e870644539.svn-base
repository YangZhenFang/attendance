<template>
  <div>

    <div class="tabPosition">
      <!--查询-->
      <el-form :inline="true" :model="formInline" class="demo-form-inline" ref="formInline"
               @keyup.enter.native="onSearch('formInline')">
        <el-form-item label="机构名称" prop="org_name">
          <el-input size="mini" v-model="formInline.org_name" placeholder="机构名称"></el-input>
        </el-form-item>
        <el-form-item>
          <el-button size="mini" type="primary" icon="search" @click="onSearch('formInline')">查询</el-button>
          <el-button size="mini" type="info" @click="resetForm('formInline')"><icon name="refresh" class="custom-icon"></icon>重置</el-button>
          <el-button size="mini" type="success" icon="plus" @click="handleAdd">新增</el-button>
          <el-button size="mini" type="danger" icon="delete" @click="batchRemove">批量删除</el-button>
        </el-form-item>
      </el-form>

      <!--表单-->
      <el-table
        :data="PlOrgTableData"
        border
        v-loading="loading"
        :height="this.$store.state.gTableHeight"
        @selection-change="handleSelectionChange"
        style="width: 100%">
        <el-table-column
          type="selection">
        </el-table-column>
        <el-table-column
          prop="org_name"
          label="机构名称"
          sortable>
        </el-table-column>
        <el-table-column
          prop="org_code"
          label="组织机构编码"
          sortable>
        </el-table-column>
        <el-table-column
          prop="org_type"
          :formatter="tableformatter"
          label="组织机构类型">
        </el-table-column>
        <el-table-column
          prop="description"
          label="描述">
        </el-table-column>
        <el-table-column label="操作" width="150">
          <template scope="scope">
            <el-button
              size="mini" 
              type="primary"
              @click="handleEdit(scope.$index, scope.row)">编辑
            </el-button>
            <el-button
              size="mini"
              type="danger"
              @click="handleDelete(scope.$index, scope.row)">删除
            </el-button>
          </template>
        </el-table-column>
      </el-table>
      <paging @emitsizechange="handleSizeChange"
              @emitcurrentchange="handleCurrentChange"
              :currentPage="tabPage.currentPage"
              :pageSizes="tabPage.pageSizes"
              :pageSize="tabPage.pageSize"
              :total="tabPage.totalNum">
      </paging>
    </div>
    <!--<div class="treePosition">-->
    <!--<rights-Tree :dataTree="dataTree" :defaultKey="defaultKey" :org_id="org_id" @changeDepart="getRoleByDepart"></rights-Tree>-->
    <!--</div>-->
    <!--dialog-->
    <el-dialog v-bind:title="formTitle" v-model="dialogInfo" :close-on-click-modal="false"
               v-on:close="resetForm('ruleForm')" size="tiny">
      <el-form :model="ruleForm" :rules="this.$validateRule" ref="ruleForm" label-width="110px">
        <el-form-item label="机构名称" prop="org_name">
          <el-input size="small" v-model="ruleForm.org_name"></el-input>
        </el-form-item>
        <!-- <el-form-item label="上级机构" prop="parentdepartid">
            <el-input v-model="ruleForm.parentdepartid"></el-input>
        </el-form-item> -->
        <el-form-item label="组织机构编码" prop="org_code">
          <el-input size="small" v-model="ruleForm.org_code"></el-input>
        </el-form-item>
        <el-form-item label="组织机构类型" prop="org_type">
          <el-select size="small" v-model="ruleForm.org_type" placeholder="请选择" @change="selectParent">
            <el-option v-for="(item,index) in zzjglx"
                       :label="item.typename" :value="item.typecode" :key="index">
            </el-option>
          </el-select>
        </el-form-item>

        <el-form-item label="父级机构" prop="" v-show="parentItem">
          <el-select size="small" v-model="ruleForm.parentid" placeholder="请选择">
            <el-option
              v-for="item in parentOptions"
              :key="item.id"
              :label="item.name"
              :value="item.id">
            </el-option>
          </el-select>

        </el-form-item>

        <el-form-item label="描述" prop="description">
          <el-input size="small" type="textarea" v-model="ruleForm.description"></el-input>
        </el-form-item>
      </el-form>
      <div slot="footer" class="dialog-footer">
        <el-button size="mini" @click="dialogInfo=false">取 消</el-button>
        <el-button size="mini" type="primary" @click="submitForm('ruleForm')">确 定</el-button>
      </div>
    </el-dialog>

    <router-view></router-view>
  </div>
</template>

<script>
  import paging from '../../common/Paging.vue'
  import rightsTree from './roleList.vue'

  export default {
    data(){
      return {
        parentItem: false,
        parentOptions: [],
        value: '',
        PlOrgTableData: [],//部门列表数组
        sels: [],//表格选中列
        tabPage: {
          currentPage: 1,
          pageSize: 10,
          pageSizes: [10, 20, 30, 50]
        },//分页信息
        loading: true,
        formInline: {//查询表单对象
          org_name: ''
        },
        dialogInfo: false,//模态框是否显示标识
        ruleForm: {},//新增表单数据
        formTitle: '',//新增编辑模态框title
        tunnelList: [],//隧道下拉
        zzjglx: [],//组织机构类型列表
        dataTree: [],//角色树
        defaultKey: [],//选中项
        defaultProps: {
          children: 'children',
          label: 'rolename'
        },
        org_id: ''//选中部门id
      }
    },
    created: function () {

    },
    mounted: function () {
      this.zzjglx = this.getDicData('jwzzjglx');
      console.log(this.zzjglx)
      this.getPlOrgList()
//            this.getSysRoles();
    },
    components: {
      paging, rightsTree
    },
    computed: {},
    methods: {
      tableformatter(row, column){
        var _self = this;
        console.log(_self.zzjglx)
        var data=$.grep(_self.zzjglx, function (value) {
            return value.typecode == row.org_type
        });
        return data[0].typename
      },
      selectParent(val){
        if (val) {
          console.log(val)
          if (val === '1') {
            this.parentItem = false;
//            this.ruleForm.parentid = 1;
          } else {
            this.parentItem = true;
            this.getplOrgName(val - 1);
          }
        } else {
          this.parentItem = false;
        }

      },
      getplOrgName(org_type){
        var _self = this;
        this.$http.get('/business/plOrg/getplorgbytype', {
          params: {
            org_type: org_type
          }
        }).then(function (res) {
          if (res.data && res.data.flag) {
            var data = res.data.data;
//            var options = [];
//            for (var i in data) {
//              options.push({
//                value: data[i].id,
//                label: data[i].org_name
//              })
//            }
            _self.parentOptions = data;
          }
        }).catch(function (err) {
          console.log(err);
        })
      },

      //


      getDicData(str){//获取数据字典相关内容
        var dicList = JSON.parse(this.$getStore("gDictionaryList"))
        var filterarray = $.grep(dicList, function (value) {
          return value.typegroupcode === str;//筛选出其中一个，仍为一个数组
        });
        if (filterarray.length > 0) {//防止前端报错
          return filterarray[0].typeList;
        }
      },
      async getPlOrgList(params){
        var _self = this;
        _self.loading = true;
        var data = {
          page: this.tabPage.currentPage,
          pageSize: this.tabPage.pageSize,
          org_name: this.formInline.org_name
        };
        if (params) {
          data = params;
        }
        this.$http.get('/business/plorg/getplorglist', {params: data})
          .then(function (res) {
            if (res.data && res.data.flag) {
              var d = res.data.data;
              _self.PlOrgTableData = d.rows;
              _self.tabPage.totalNum = d.count;
              _self.loading = false;
            }
          }).catch(function (error) {
          _self.loading = false;
          console.log(error)
        });
      },
      /**
       * 查询 根据机构名称模糊查询
       * @params {String} formName 进行验证
       */
      onSearch(formName){
        var params = this.formInline;
        params.page = 1;
        params.pageSize = this.tabPage.pageSize;
        this.tabPage.currentPage = 1;//每次查询默认第一页
        var _self = this;
        _self.$refs[formName].validate((valid) => {
          if (valid) {
            _self.getPlOrgList(params);
          } else {
            console.log('提交错误');
          }
        });
      },
      /**
       * 点击新增按钮
       */
      handleAdd(){
        this.dialogInfo = true;
        this.formTitle = "新增部门信息";
        this.ruleForm = Object.assign({}, {
          org_name: '',
          org_code: '',
          parentid: '',
          org_type: undefined,
          description: ''
        });//初始化
      },
      /**
       * 保存部门信息
       * @params {String} formName 用于验证
       */
      submitForm(formName){
        var _self = this;
        var params = _self.ruleForm;
//      var params={
//        org_name:'中队1',
//        description:'难怪是关于',
//        org_code:'0001',
//        org_type:'足迹机构'
//      }
        this.$refs[formName].validate((valid) => {
          if (valid) {
            _self.$http.post('/business/plorg/saveplorginfo', params)
              .then(function (res) {
                console.log(res)
                if (res.data && res.data.flag) {
                  _self.dialogInfo = false;
                  _self.$message({
                    message: '提交成功',
                    type: 'success'
                  });
                  _self.getPlOrgList();
                } else {
                  _self.$message({
                    message: res.data.msg,
                    type: 'warning'
                  });
                }
              })
              .catch(function (error) {
                console.log(error);
              });
          } else {
            console.log('提交错误');
            return false;
          }
        });
      },
      /**
       * 表单重置
       * @params {Object} formName 表单名称
       */
      resetForm(formName){
        this.$refs[formName].resetFields();
        if(formName=='formInline'){
          this.getPlOrgList();
        }
      },
      /**
       * 编辑按钮点击事件
       * @params {Number} index  行号
       * @params {Object} row 行对象
       */
      handleEdit(index, row) {
        console.log(row)
        this.dialogInfo = true;
        this.formTitle = "编辑部门信息";
        this.ruleForm = Object.assign({}, row);
        this.selectParent(this.ruleForm.org_type)
      },
      /**********绑定角色start************/
      handleRole(index, row){

        $(".treePosition").css('right', '-25%').css('display', 'block').animate({right: '10px'}, "slow");
        $('.tabPosition').animate({width: '74%'}, "slow");
        this.org_id = row.id;
//        var params  = {org_id:row.id};
//        this.getRoleListByDid(params);
      },
      getRoleListByDid(params){
        var _self = this;
        this.$http.get('/api/sysRoleRouter/getsysRoleDepart', {params: params})
          .then(function (res) {
            if (res.data && res.data.flag) {
              _self.defaultKey = res.data.data;
            } else {
              _self.$message({
                message: '查询错误',
                type: 'warning'
              })
            }
          }).catch(function (error) {
          console.log(error)
        });
      },
      getSysRoles(){
        var _self = this;
        this.$http.get('/api/sysRoleRouter/getsysRolesName')
          .then(function (res) {
            _self.dataTree = res.data.data;
          }).catch(function (error) {
          console.log(error)
        });
      },
      getRoleByDepart(data){
        this.org_id = data;
        var params = {org_id: data};
        this.getRoleListByDid(params);
      },
      /*******绑定角色end******/
      /**
       * 删除按钮点击事件
       * @params {Number} index   行号
       * @params {Object} row     行对象
       */
      handleDelete(index, row) {
        var _self = this;
        _self.deletePlOrgInfo(row);
      },
      /**
       * 删除部门信息
       * @params {Object} row|rows     行对象
       */
      deletePlOrgInfo(data){
        var _self = this;
        this.$confirm('此操作将永久删除选择组织机构, 是否继续?', '提示', {
          confirmButtonText: '确定',
          cancelButtonText: '取消',
          type: 'warning'
        }).then(function () {
          _self.$http.post('/business/plorg/deleteplorginfo', data).then(function (res) {
            if (res.data && res.data.flag) {
              _self.$message({
                message: '删除成功',
                type: 'success'
              });
              _self.getPlOrgList();
            } else {
              _self.$message({
                message: res.data.msg,
                type: 'warning'
              });
            }
          }).catch(function (err) {
            console.log(err);
          })
        }).catch(function (err) {
          console.log(err);
        });
      },
      /**
       * 切换每页条数
       * @params {Number} val 每页条数
       */
      handleSizeChange(val) {
        this.tabPage.pageSize = val;
        this.getPlOrgList();
      },
      /**
       * 切换页码
       * @params {Number} val 页码
       */
      handleCurrentChange(val) {
        this.tabPage.currentPage = val;
        this.getPlOrgList();
      },
      /**
       * 多选框改变选中事件
       * @params {Array} val 当前所有选中行对象数组
       */
      handleSelectionChange(val) {
        this.multipleSelection = val;
        this.sels = val;
      },
      /**
       * 批量删除操作
       */
      batchRemove(){
        var _self = this;
        var arr = _self.sels;
        if (arr.length > 0) {
          _self.deletePlOrgInfo({params: arr});
        } else {
          _self.$message({
            message: '请选择部门',
            type: 'warning'
          });
        }

      }

    }

  }
</script>

<style scoped>
  .el-select {
    width: 100%;
  }

  .tabPosition {
    float: left;
    width: 100%;
  }

  .treePosition {
    margin-top: -25px;
    position: absolute;
    right: -25%;
    width: 25%;
    min-width: 280px;
    float: right;
    display: none;
  }
</style>
