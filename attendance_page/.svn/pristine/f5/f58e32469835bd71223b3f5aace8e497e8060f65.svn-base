<template>
    <div>
    <el-form :inline="true" :model="formInline" class="demo-form-inline" ref="formInline" :rules="rules">
            <el-form-item label="考勤日期" prop="startDate">
                <el-date-picker size="mini" v-model="formInline.startDate" type="date" placeholder="选择日期" :picker-options="pickerOptions0">
                </el-date-picker>
            </el-form-item>
            <el-form-item label="至" prop="endDate">
                <el-date-picker size="mini" v-model="formInline.endDate" type="date" placeholder="选择日期" :picker-options="pickerOptions0">
                </el-date-picker> 
            </el-form-item>
             <el-form-item label="考勤人员:">
                <div class="tagclass" @click="chooseDepartOrPlice">
                <el-tag style="margin: 0 3px" :type="item.type" v-for="(item,index) in attendanceClerk" :key="item.id">
                    {{item.name}}
                </el-tag>
                </div>
            </el-form-item>
            <el-form-item>
                <el-button size="mini" type="primary" icon="search" @click="onSearch('formInline')">查询</el-button>
                <el-button size="mini" type="info" @click="resetForm('formInline')"><icon name="refresh" class="custom-icon"></icon>重置</el-button>
                <!--<span>(选择全体才能导出,报表保留两个月)</span>-->
            </el-form-item>
        </el-form>
        <div class="excelBtn">
          <el-button size="mini" type="primary" @click="onSearch('formInline')">&nbsp;导出报表&nbsp;</el-button>
        </div>
        <el-table
            :data="tableData"
            border
            :height="this.$store.state.gTableHeight"
            style="width: 100%">
            <el-table-column 
            v-for="col in cols"
            :prop="col.prop" :label="col.label" :key="col.prop" :formatter="col.format">
                <template v-if="col.children.length>0">
                <el-table-column 
                    v-for="test in col.children"
                    :prop="test.prop" 
                    :label="test.label" 
                    :key="test.label"
                    :formatter="test.format">
                    </el-table-column>
                </template>
            
            </el-table-column>
        
        </el-table>
        <paging @emitsizechange="handleSizeChange"
          @emitcurrentchange="handleCurrentChange"
          :currentPage="tabPage.currentPage"
          :pageSizes="tabPage.pageSizes"
          :pageSize="tabPage.pageSize"
          :total="tabPage.totalNum">
        </paging>
          <!--参与考勤人员-->
        <Police :dialog-visible="dialogVisible" type="attendanceClerk" :data="propData" ref="attendanceClerk"
            title="参与考勤人员选择" @close="dialogClose"></Police>
    </div>
</template>
<script>
  import paging from '../../common/Paging.vue';
  import {dateFormat,setDays} from '../../../../static/js/date.js'
  import Police from '../../common/selectDepart.vue'

  export default {
    data() {
      var validateEndTime = (rule, value, callback) => {//验证结束时间不能大于开始时间
          var startTime = this.formInline.startDate;
          if(!value){
            callback(new Error('请选择结束时间'));
          }
          setTimeout(() => {
              if (startTime > value) {
                  callback(new Error('结束时间不能小于开始时间'));
              } else {
                  callback();
              }
              ;
          }, 200)
      };
      return {
        pickerOptions0: {
          disabledDate(time) {
            return time.getTime() > Date.now();
          }
        },
        attendanceClerk: [],      //参与考勤人员数据
        formInline:{
          startDate:setDays(1),
          endDate:setDays(0)
        },
        dialogVisible:false,//组织机构树弹窗
        departArr:[],
        policeArr:[],
        propData: [],   //父组件传递子组件中间数据
        tableData: [],
        cols: [
            {prop: 'pl_person.police_name', label: '警员姓名',children:[]},
            {prop: 'pl_org.org_name', label: '组织机构',children:[]},
            {prop: 'pl_person.code', label: '工号',children:[]},
            {prop: 'pl_person.pl_role_polouse.pl_role.role_name', label: '职位',children:[]},
            {prop: 'record_date', label: '考勤日期',children:[]},
            {label: '上班考勤',children:[
                {prop: 'to_time', label: '上班时间',children:[],format:this.dtformatFun},
                {prop: 'to_status', label: '考勤状态',children:[]},
            ]},
            {label: '下班考勤',children:[
                {prop: 'of_time', label: '下班时间',children:[],format:this.dtformatFun},
                {prop: 'of_status', label: '考勤状态',children:[]},
            ]},
        ],
        tabPage: {
            currentPage: 1,
            pageSize: 5,
            pageSizes: [5, 20, 30, 50]
        },//分页信息
        rules: {//验证规则
            startDate: [
                {type: 'date', required: true, message: '请选择开始日期', trigger: 'change'}
            ],
            endDate: [
                {type: 'date', required: true,validator: validateEndTime, trigger: 'change'}
            ],
            range: [
                {required: true, message: '请选择部门/人员', trigger: ' blur change'}
            ],
        },
      };
    },
    components: {
        paging,Police
    },
    mounted:function(){
      this.getAtdList();
    },
    methods: {
      dtformatFun(row, colum){//时间格式化
          if (row[colum.property] != null) {
              var d = row[colum.property];
              return dateFormat(new Date(d),"hh:mm:ss")
              
          }
      },
      /**
       * 表单重置
       * @params {Object} formName 表单名称
       */
      resetForm(formName){
          this.$refs[formName].resetFields();
          this.getAtdList();
      },
      /**
        *分页获取考勤记录
        *
       */
      getAtdList(params){
          console.log(params);
        var data = {
            page: this.tabPage.currentPage,
            pageSize: this.tabPage.pageSize,
            options:this.formInline,
        };
        if (params) {
            data = params;
        }
        data.departArr = this.departArr;
        data.policeArr = this.policeArr;
        console.log(data);
        var _self = this;
        this.$http.get('/business/atdstatistics/getatdlist',{params:data}).then(res =>{
          console.log(res);
            if(res.data&&res.data.success){
              var d = res.data.result;
              _self.tableData = d.rows;
              _self.tabPage.totalNum = d.count;
            }
        }).catch(err =>{
          if(err){
            console.log(err);
          }
        })
        
      },
      /**
        * 切换每页条数
        * @params {Number} val 每页条数
        */
      handleSizeChange(val) {
          this.tabPage.pageSize = val;
          this.getAtdList();
      },
      /**
        * 切换页码
        * @params {Number} val 页码
        */
      handleCurrentChange(val) {
          this.tabPage.currentPage = val;
          this.getAtdList();
      },
      /**
       * 条件查询
       */ 
      onSearch(formName){
        var params = {
            page: this.tabPage.currentPage,
            pageSize: this.tabPage.pageSize,
            options:this.formInline,
        }
        this.departArr = [];
        this.policeArr = [];

        var d = this.attendanceClerk;
        if(d.length>0){
            for(var i in d){
                if(d[i].type=='depart'){
                    this.departArr.push(d[i].id);
                }else{
                    this.policeArr.push(d[i].id);
                }
            }
        }
        var _self = this;
        this.$refs[formName].validate(function (valid) {
            if (valid) {
                _self.getAtdList(params);
            } else {
                console.log('提交错误');
            }
        })
    },
       /**
       * 参与考勤人员选择
       */
      chooseDepartOrPlice(){
        this.dialogVisible = true;
        this.propData = this.attendanceClerk;
        console.log(this.propData)
      },
      /**
       * 组织及人员选择dialog关闭
       * @msg [Object] 子组件传递数据
       */
      dialogClose(msg){
        switch (msg.type) {
          case 'attendanceClerk':     //参与考勤人员
            this.dialogVisible = msg.dialogVisible;
            this.attendanceClerk = msg.CheckedLists;
            break;
          case 'unAttendanceClerk':     //不参与考勤人员
            this.unDialogVisible = msg.dialogVisible;
            this.unAttendanceClerk = msg.CheckedLists;
            break;
          case 'adAttendanceClerk':   //考勤组负责人
            this.adDialogVisible = msg.dialogVisible;
            this.adAttendanceClerk = msg.CheckedLists;
            break;
        }

      },
    }
  };
</script>
<style scoped>
  .excelBtn{
    margin:-10px 0 10px 0;
  }
  .el-tag--depart {
    background-color: #20a0ff;
    border-color: rgba(18, 206, 102, .2);
    color: #fbfdff;
  }

  .el-tag--police {
    background-color: rgba(18, 206, 102, .1);
    border-color: rgba(18, 206, 102, .2);
    color: #20a0ff;
  }

  .tagclass {
    min-height: 22px;
    border-radius: 4px;
    border: 1px solid #bfcbd9;
    padding: 0 5px;
    line-height: 20px;
    overflow: auto;
    min-width:180px;
    margin-top: 6px;
    box-sizing: border-box;
  }
.el-tag {
    padding: 0 5px;
    height: 18px;
    line-height: 18px;
    font-size: 12px;
}
</style>